import OpenAI from 'openai';
import { env } from '../config/environment';
import { Logger } from '../utils/logger';
import { FastifyBaseLogger } from 'fastify';

export class OpenAIService {
  private openai: OpenAI;
  private logger: Logger;

  constructor(logger: FastifyBaseLogger) {
    this.openai = new OpenAI({
      apiKey: env.OPENAI_API_KEY
    });

    this.logger = new Logger(logger);
  }

  public async analyzeIngredients(ingredients: string): Promise<string> {
    try {
      const prompt = `
–¢–∏ ‚Äî –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –µ–∫—Å–ø–µ—Ä—Ç —ñ–∑ –∫–æ—Å–º–µ—Ç–∏—á–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Å–∫–ª–∞–¥ –∫–æ—Å–º–µ—Ç–∏—á–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É —Ç–∞ –Ω–∞–¥–∞—Ç–∏ **–∫–æ—Ä–æ—Ç–∫–∏–π, —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —É Markdown-—Ñ–æ—Ä–º–∞—Ç—ñ**, —è–∫–∏–π –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è Telegram. –î–æ—Ç—Ä–∏–º—É–π—Å—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –ø—Ä–∞–≤–∏–ª:

### **üìå –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è**:
1. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π **–∂–∏—Ä–Ω–∏–π —à—Ä–∏—Ñ—Ç** ('** text ** ') –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ —ñ –Ω–∞–∑–≤ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤.
2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π *–∫—É—Ä—Å–∏–≤* ('* text * ') –¥–ª—è –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å –∞–±–æ –≤–∞–∂–ª–∏–≤–∏—Ö –ø—Ä–∏–º—ñ—Ç–æ–∫.
3. –î–ª—è —Å–ø–∏—Å–∫—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π **-** –∞–±–æ **‚Ä¢** (MarkdownV1).
4. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π **–ø–µ—Ä–µ–Ω–æ—Å–∏ —Ä—è–¥–∫—ñ–≤** ('\\n') –¥–ª—è —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –∞–±–∑–∞—Ü—ñ–≤.
5. –ù–ï –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∂–æ–¥–Ω–∏—Ö HTML-—Ç–µ–≥—ñ–≤ (h1, h2, p, ul, li —Ç–æ—â–æ).
6. –ù–ï –≤–∫–ª—é—á–∞–π –ø–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å ‚Äì –ª–∏—à–µ –≤–∏—Å–Ω–æ–≤–∫–∏ —Ç–∞ –∫–ª—é—á–æ–≤—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏.

---

### **üìå –§–æ—Ä–º–∞—Ç –≤–∏—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö**:

**üß¥ –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:**  
- **–ì–ª—ñ—Ü–µ—Ä–∏–Ω** ‚Äì –∑–∞–±–µ–∑–ø–µ—á—É—î –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è —Ç–∞ –∑–∞–ø–æ–±—ñ–≥–∞—î –≤—Ç—Ä–∞—Ç—ñ –≤–æ–ª–æ–≥–∏.  
- **–î–∏–º–µ—Ç–∏–∫–æ–Ω** ‚Äì —Å—Ç–≤–æ—Ä—é—î –∑–∞—Ö–∏—Å–Ω–∏–π –±–∞—Ä'—î—Ä –Ω–∞ —à–∫—ñ—Ä—ñ, –∑–º–µ–Ω—à—É—é—á–∏ –≤—Ç—Ä–∞—Ç—É –≤–æ–¥–∏.  
- **–ì—ñ–∞–ª—É—Ä–æ–Ω–æ–≤–∞ –∫–∏—Å–ª–æ—Ç–∞** ‚Äì –≥–ª–∏–±–æ–∫–æ –∑–≤–æ–ª–æ–∂—É—î —Ç–∞ –Ω–∞–¥–∞—î –µ—Ñ–µ–∫—Ç –ø—Ä—É–∂–Ω–æ—Å—Ç—ñ.  

**üü¢ –ë–µ–∑–ø–µ–∫–∞:**  
- üü¢ **–ë–µ–∑–ø–µ—á–Ω—ñ:** –ì–ª—ñ—Ü–µ—Ä–∏–Ω, –ì—ñ–∞–ª—É—Ä–æ–Ω–æ–≤–∞ –∫–∏—Å–ª–æ—Ç–∞, –ê–ª–æ–µ –≤–µ—Ä–∞.  
- üü° **–ú–æ–∂–ª–∏–≤–µ –ø–æ–¥—Ä–∞–∑–Ω–µ–Ω–Ω—è:** –§–µ–Ω–æ–∫—Å—ñ–µ—Ç–∞–Ω–æ–ª (–∫–æ–Ω—Å–µ—Ä–≤–∞–Ω—Ç).  
- üî¥ **–ê–ª–µ—Ä–≥–µ–Ω–∏:** –ü–∞—Ä—Ñ—É–º–∏ –º–æ–∂—É—Ç—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ä–µ–∞–∫—Ü—ñ—é —É —á—É—Ç–ª–∏–≤–æ—ó —à–∫—ñ—Ä–∏.  

**‚ö†Ô∏è –ú–æ–∂–ª–∏–≤—ñ –Ω–µ—Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ:**  
- ‚ùå *–°–∏–ª—ñ–∫–æ–Ω–∏ + –í–æ–¥–∞* ‚Äì –º–æ–∂—É—Ç—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏ "—Å–∫–æ—á—É–≤–∞–Ω–Ω—è" –∫—Ä–µ–º—É –Ω–∞ —à–∫—ñ—Ä—ñ.  

**üíñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è —à–∫—ñ—Ä–∏:**  
- ‚úÖ **–°—É—Ö–∞ —à–∫—ñ—Ä–∞:** –ì—ñ–∞–ª—É—Ä–æ–Ω–æ–≤–∞ –∫–∏—Å–ª–æ—Ç–∞, –ì–ª—ñ—Ü–µ—Ä–∏–Ω.  
- ‚úÖ **–ß—É—Ç–ª–∏–≤–∞ —à–∫—ñ—Ä–∞:** –ê–ª–∞–Ω—Ç–æ—ó–Ω, –ê–ª–æ–µ –≤–µ—Ä–∞.  
- ‚ùå **–ñ–∏—Ä–Ω–∞ —à–∫—ñ—Ä–∞:** –î–∏–º–µ—Ç–∏–∫–æ–Ω –º–æ–∂–µ –∑–∞–±–∏–≤–∞—Ç–∏ –ø–æ—Ä–∏.  

**üèÜ –°—Ö–æ–∂–∏–π –Ω–∞:**  
- üîπ *CeraVe Hydrating Moisturizer* *(90% —Å—Ö–æ–∂–∏—Ö —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤)*  
- üîπ *Clinique Moisture Surge* *(85% —Å—Ö–æ–∂–∏—Ö —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤)*  

**üí° –í–∏—Å–Ω–æ–≤–æ–∫:**  
–ü—Ä–æ–¥—É–∫—Ç –¥–æ–±—Ä–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è **—Å—É—Ö–æ—ó —Ç–∞ —á—É—Ç–ª–∏–≤–æ—ó —à–∫—ñ—Ä–∏**, –∞–ª–µ **–ª—é–¥—è–º —ñ–∑ –∂–∏—Ä–Ω–æ—é —à–∫—ñ—Ä–æ—é –≤–∞—Ä—Ç–æ —É–Ω–∏–∫–∞—Ç–∏ —Å–∏–ª—ñ–∫–æ–Ω—ñ–≤**.  
–ü–µ—Ä–µ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∑—Ä–æ–±—ñ—Ç—å —Ç–µ—Å—Ç –Ω–∞ —á—É—Ç–ª–∏–≤—ñ—Å—Ç—å! üí°  

---

### **üìå –ó–∞–≤–¥–∞–Ω–Ω—è AI**:
–û—Å—å —Å–ø–∏—Å–æ–∫ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É:  
\`${ingredients}\`  
**–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —ó—Ö –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º —Ç–∞ –ø–æ–≤–µ—Ä–Ω–∏ Telegram-–±–µ–∑–ø–µ—á–Ω—É Markdown-–≤—ñ–¥–ø–æ–≤—ñ–¥—å. –ù–ï –≤–∫–ª—é—á–∞–π –ø–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å ‚Äì –ª–∏—à–µ –≤–∏—Å–Ω–æ–≤–∫–∏.**
`;
      const response = await this.openai.chat.completions.create({
        model: "gpt-3.5-turbo",
        messages: [
          {
            role: "system",
            content: "You are a cosmetic ingredient analysis expert. Provide detailed but easy to understand information about cosmetic ingredients."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 1000
      });

      return response.choices[0].message.content || 'Sorry, I couldn\'t analyze these ingredients.';
    } catch (error) {
      this.logger.error('OpenAI API Error', error);
      throw new Error('Failed to analyze ingredients');
    }
  }
}

