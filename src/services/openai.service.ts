import OpenAI from 'openai';
import { env } from '../config/environment';
import { Logger } from '../utils/logger';
import { FastifyBaseLogger } from 'fastify';

export class OpenAIService {
  private openai: OpenAI;
  private logger: Logger;

  constructor(logger: FastifyBaseLogger) {
    this.openai = new OpenAI({
      apiKey: env.OPENAI_API_KEY
    });

    this.logger = new Logger(logger);
  }

  public async analyzeIngredients(ingredients: string): Promise<string> {
    try {
      const prompt = `
    –¢–∏ ‚Äî –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –µ–∫—Å–ø–µ—Ä—Ç —ñ–∑ –∫–æ—Å–º–µ—Ç–∏—á–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Å–∫–ª–∞–¥ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤ –∫–æ—Å–º–µ—Ç–∏—á–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—É HTML-–≤—ñ–¥–ø–æ–≤—ñ–¥—å. –£ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Å–ª—ñ–¥ –Ω–∞–¥–∞—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—ñ–∑–æ–≤–∞–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ:

    1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑–¥—ñ–ª—É –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –µ–º–æ–¥–∑—ñ:
       - –Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç: üåø
       - –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ: üß¥
       - –ú–æ–∂–ª–∏–≤—ñ —Ä–∏–∑–∏–∫–∏: ‚ö†Ô∏è
       - –í–∏—Å–Ω–æ–≤–æ–∫: üí°

    2. –§–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:
       - –ü–æ—á–∏–Ω–∞–π –∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∞ (–∂–∏—Ä–Ω–∏–º —à—Ä–∏—Ñ—Ç–æ–º —ñ–∑ –µ–º–æ–¥–∑—ñ).
       - –î–ª—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –¥–µ—Ç–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç–æ–≤–∏–π –æ–ø–∏—Å —ñ–∑ –ø—ñ–¥–ø—É–Ω–∫—Ç–∞–º–∏.
       - –ó–∞–≤–µ—Ä—à—É–π —Ç–µ–∫—Å—Ç –ø–æ–∑–∏—Ç–∏–≤–Ω–æ—é –ø–æ—Ä–∞–¥–æ—é.

    –û—Å—å —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É: ${ingredients}.
    –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –π–æ–≥–æ –∑–∞ —Ç–∞–∫–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º —Ç–∞ –ø–æ–≤–µ—Ä–Ω–∏ HTML-–≤—ñ–¥–ø–æ–≤—ñ–¥—å.
  `;

      const response = await this.openai.chat.completions.create({
        model: "gpt-3.5-turbo",
        messages: [
          {
            role: "system",
            content: "You are a cosmetic ingredient analysis expert. Provide detailed but easy to understand information about cosmetic ingredients."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 1000
      });

      return response.choices[0].message.content || 'Sorry, I couldn\'t analyze these ingredients.';
    } catch (error) {
      this.logger.error('OpenAI API Error', error);
      throw new Error('Failed to analyze ingredients');
    }
  }
}

